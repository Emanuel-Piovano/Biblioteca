package Presentacion;

import Negocio.Lector;
import Negocio.Libro;
import Negocio.Prestamo;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

public class Prestamos extends javax.swing.JFrame {
    
    /**
     * Creates new form Ventana
     */
    
    FondoPanel fondo = new FondoPanel();
    
    public Prestamos() {
        this.setContentPane(fondo);
        
        initComponents();
        setTitle("Lectores");
        setLocationRelativeTo(null);
        this.setExtendedState(Frame.MAXIMIZED_BOTH);
        model1 = (DefaultTableModel) this.jTable1.getModel();
        model2 = (DefaultTableModel) this.jTable2.getModel();
        model3 = (DefaultTableModel) this.jTable3.getModel();
    }
    
    DefaultTableModel model1;
    DefaultTableModel model2;
    DefaultTableModel model3;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        textId = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1920, 1080));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton2.setText("Refrescar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Apellido", "DNI", "Fecha Nacimiento", "Dirección", "Localidad", "Provincia", "Teléfono", "Socio", "Deuda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton5.setText("Salir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Autor", "Editorial", "Genero", "Coleccion", "ISBN", "Paginas", "Año Publicacion", "Descripcion", "Estado", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha Prestamo", "Fecha Devolucion", "Cantidad Libros", "CostoTotal", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable2);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1821, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton7)
                    .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(76, 76, 76)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
    public boolean isDireccion() {
        return direccion;
    }*/
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Lector refrescar = new Lector();                    //Se crea el objeto refrescar correspondiente a la clase Lector
        
        //refrescar.Conectar();//Eliminar
        refrescar.Refrescar(model1);                         //Se llama al método Refrescar del objeto refrescar de la clase Lector
        textId.setText("");                                 //Borra lo escrito en el buscador por Id
        //refrescar.Desconectar();//Eliminar
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here: 
        Lector refrescar1 = new Lector();                    //Se crea el objeto refrescar correspondiente a la clase Lector
        Libro refrescar2 = new Libro();                    //Se crea el objeto refrescar correspondiente a la clase Libro
        Prestamo refrescar3 = new Prestamo();                    //Se crea el objeto refrescar correspondiente a la clase Prestamo
        
        refrescar1.Conectar();                               //Se llama al método Conectar perteneciente al objeto refrescar de la clase Lector
        refrescar1.Refrescar(model1);                         //Se llama al método Refrescar del objeto refrescar de la clase Lector
        refrescar2.Conectar();                               //Se llama al método Conectar perteneciente al objeto refrescar de la clase Libro
        refrescar3.Conectar();                               //Se llama al método Conectar perteneciente al objeto refrescar de la clase Prestamo
        //refrescar1.Desconectar();//Eliminar
    }//GEN-LAST:event_formWindowOpened

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Menu obj = new Menu();
        
        obj.setVisible(true);
        dispose();   
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int idBuscar = Integer.parseInt(textId.getText());
        
        Lector buscar = new Lector(idBuscar);
        //buscar.Conectar();//Eliminar
        buscar.Buscar(model1);                                                //Se llama al método Refrescar del objeto dt de la clase Datos
        //buscar.Desconectar();//Eliminar
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = jTable1.getSelectedRow();
        int idBuscar = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
        
        Prestamo buscar = new Prestamo(idBuscar);
        //buscar.Conectar();//Eliminar
        buscar.Buscar(model2);                                                //Se llama al método Buscar del objeto buscar de la clase Prestamo
        //buscar.Desconectar();//Eliminar
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = jTable1.getSelectedRow();
        int idLectorBuscar = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
        filaSeleccionada = jTable2.getSelectedRow();
        int idPrestamoBuscar = Integer.parseInt(jTable2.getValueAt(filaSeleccionada, 0).toString());

        Prestamo buscar = new Prestamo(idPrestamoBuscar, idLectorBuscar);
        //buscar.Conectar();//Eliminar
        buscar.BuscarLibros(model3); 
        //buscar.Desconectar();//Eliminar
        
        Libro libros = new Libro();
        //libros.Conectar();//Eliminar
        libros.BuscarLibros(model3, buscar.getIdLibro1(), buscar.getIdLibro2(), buscar.getIdLibro3(), buscar.getIdLibro4(), buscar.getIdLibro5());
        //buscar.Desconectar();//Eliminar
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Prestamo eliminar = new Prestamo();
        //eliminar.Conectar();//Eliminar
        int filaSeleccionada = jTable2.getSelectedRow();
        
        if(filaSeleccionada >= 0){
            String idEliminar = jTable2.getValueAt(filaSeleccionada, 0).toString();
            
            model2.removeRow(filaSeleccionada);
            eliminar.Eliminar(idEliminar);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No se selecciono ninguna fila o no existen datos cargados en la tabla.");
        }
        //eliminar.Desconectar();//Eliminar
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Al oprimir el botón "Modificar", nos dirige a la ventana "AgregarLector"
        AgregarPrestamo obj = new AgregarPrestamo();
        
        int filaSeleccionada = jTable1.getSelectedRow();
        
        if(filaSeleccionada >= 0){
            int idModificar = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
            String nombreModificar = jTable1.getValueAt(filaSeleccionada, 1).toString();
            String apellidoModificar = jTable1.getValueAt(filaSeleccionada, 2).toString();
            
            obj.setVisible(true);
            obj.Cargar(idModificar, nombreModificar, apellidoModificar);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No se selecciono ninguna fila o no existen datos cargados en la tabla.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //Al oprimir el botón "Modificar", nos dirige a la ventana "AgregarPrestamo"
        AgregarPrestamo modificar = new AgregarPrestamo();
        
        int filaSeleccionadaTabla1 = jTable1.getSelectedRow();
        int filaSeleccionadaTabla2 = jTable2.getSelectedRow();
        int libro1 = 0;
        int libro2 = 1;
        int libro3 = 2;
        int libro4 = 3;
        int libro5 = 4;
        String autorLibro1Modificar = "";
        String nombreLibro1Modificar = "";
        String autorLibro2Modificar = "";
        String nombreLibro2Modificar = "";
        String autorLibro3Modificar = "";
        String nombreLibro3Modificar = "";
        String autorLibro4Modificar = "";
        String nombreLibro4Modificar = "";
        String autorLibro5Modificar = "";
        String nombreLibro5Modificar = "";
        
        if(filaSeleccionadaTabla2 >= 0){
            int idLectorModificar = Integer.parseInt(jTable1.getValueAt(filaSeleccionadaTabla1, 0).toString());
            String nombreLectorModificar = jTable1.getValueAt(filaSeleccionadaTabla1, 1).toString();
            String apellidoLectorModificar = jTable1.getValueAt(filaSeleccionadaTabla1, 2).toString();
            int idPrestamoModificar = Integer.parseInt(jTable2.getValueAt(filaSeleccionadaTabla2, 0).toString());
            String fechaPrestamoModificar = jTable2.getValueAt(filaSeleccionadaTabla2, 1).toString();
            String fechaDevolucionModificar = jTable2.getValueAt(filaSeleccionadaTabla2, 2).toString();
            int cantidadLibros = Integer.parseInt(jTable2.getValueAt(filaSeleccionadaTabla2, 3).toString());

            switch (cantidadLibros) {
                case 1:
                    autorLibro1Modificar = jTable3.getValueAt(libro1, 2).toString();
                    nombreLibro1Modificar = jTable3.getValueAt(libro1, 1).toString();
                    break;
                case 2:
                    autorLibro1Modificar = jTable3.getValueAt(libro1, 2).toString();
                    nombreLibro1Modificar = jTable3.getValueAt(libro1, 1).toString();
                    autorLibro2Modificar = jTable3.getValueAt(libro2, 2).toString();
                    nombreLibro2Modificar = jTable3.getValueAt(libro2, 1).toString();
                    break;
                case 3:
                    autorLibro1Modificar = jTable3.getValueAt(libro1, 2).toString();
                    nombreLibro1Modificar = jTable3.getValueAt(libro1, 1).toString();
                    autorLibro2Modificar = jTable3.getValueAt(libro2, 2).toString();
                    nombreLibro2Modificar = jTable3.getValueAt(libro2, 1).toString();
                    autorLibro3Modificar = jTable3.getValueAt(libro3, 2).toString();
                    nombreLibro3Modificar = jTable3.getValueAt(libro3, 1).toString();
                    break;
                case 4:
                    autorLibro1Modificar = jTable3.getValueAt(libro1, 2).toString();
                    nombreLibro1Modificar = jTable3.getValueAt(libro1, 1).toString();
                    autorLibro2Modificar = jTable3.getValueAt(libro2, 2).toString();
                    nombreLibro2Modificar = jTable3.getValueAt(libro2, 1).toString();
                    autorLibro3Modificar = jTable3.getValueAt(libro3, 2).toString();
                    nombreLibro3Modificar = jTable3.getValueAt(libro3, 1).toString();
                    autorLibro4Modificar = jTable3.getValueAt(libro4, 2).toString();
                    nombreLibro4Modificar = jTable3.getValueAt(libro4, 1).toString();
                    break;
                case 5:
                    autorLibro1Modificar = jTable3.getValueAt(libro1, 2).toString();
                    nombreLibro1Modificar = jTable3.getValueAt(libro1, 1).toString();
                    autorLibro2Modificar = jTable3.getValueAt(libro2, 2).toString();
                    nombreLibro2Modificar = jTable3.getValueAt(libro2, 1).toString();
                    autorLibro3Modificar = jTable3.getValueAt(libro3, 2).toString();
                    nombreLibro3Modificar = jTable3.getValueAt(libro3, 1).toString();
                    autorLibro4Modificar = jTable3.getValueAt(libro4, 2).toString();
                    nombreLibro4Modificar = jTable3.getValueAt(libro4, 1).toString();
                    autorLibro5Modificar = jTable3.getValueAt(libro5, 2).toString();
                    nombreLibro5Modificar = jTable3.getValueAt(libro5, 1).toString();
                    break;
                default:
                    throw new AssertionError();
            }
            
            modificar.setVisible(true);
            
            modificar.Cargar(idLectorModificar, nombreLectorModificar, apellidoLectorModificar, idPrestamoModificar, fechaPrestamoModificar, 
                            fechaDevolucionModificar, nombreLibro1Modificar, nombreLibro2Modificar, nombreLibro3Modificar, nombreLibro4Modificar, 
                            nombreLibro5Modificar, autorLibro1Modificar, autorLibro2Modificar, autorLibro3Modificar, autorLibro4Modificar, 
                            autorLibro5Modificar, true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No se selecciono ninguna fila o no existen datos cargados en la tabla.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prestamos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField textId;
    // End of variables declaration//GEN-END:variables

    //Se le coloca una imagen como fondo de pantalla
    class FondoPanel extends JPanel{
        private Image imagen;
        
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/Imagenes/Biblioteca.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
